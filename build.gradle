plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id "maven-publish"
	id "com.github.johnrengelman.shadow" version "7.1.2"
}

version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
	}
	maven {
		name = "meteor-maven-snapshots"
		url = "https://maven.meteordev.org/snapshots"
	}
	maven {
		name = 'impactdevelopment-repo'
		url = 'https://impactdevelopment.github.io/maven/'
	}
	mavenCentral()
}

configurations {
	include.extendsFrom(modInclude)
	modImplementation.extendsFrom(modInclude)

	// include libraries
	implementation.extendsFrom(library)
	shadow.extendsFrom(library)
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modInclude fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
	library files("libs\\norbit-1.0.0.jar")
	library "meteordevelopment:starscript:${project.starscript_version}"
}

shadowJar {
	configurations = [project.configurations.shadow]

	dependencies {
		exclude {
			it.moduleGroup == "org.slf4j"
		}
	}
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

remapJar {
	dependsOn shadowJar
	inputFile.set(shadowJar.archiveFile)
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}